//SSZOS24  JOB 60798,E002884,
//         CLASS=W,
//         MSGCLASS=Q,
//         MSGLEVEL=(1,1),
//         NOTIFY=ROSCAAO,
//         TIME=NOLIMIT,
//         LINES=(999999,WARNING),
//         REGION=0M
//*
//*  MODIFY THE JOB STATEMENT ABOVE AS REQUIRED FOR YOUR INSTALLATION'S
//*  REQUIREMENTS, AND PRESS END TO CONTINUE
//*
//*
//JOBLIB   DD DSN=ZOS24.OS241147.ORDER.SCPPLOAD,
//            DISP=SHR
//*
//*-------------------------------------------------------------------
//* GDE: ServerPac INSTALLATION
//* JOB: RACFDRV
//*
//* DOC:
//*    THIS JOB CREATES RACF DATASET PROFILES AND THE REQUIRED
//*    FACILITY CLASS PROFILES TO RUN THE REMAINING INSTALLATION
//*    JOBS.
//*
//* UPDATES:
//*    DEFAULT USERID IBMUSER MUST BE CHANGED BEFORE THE JOB IS
//*    SUBMITTED.
//*
//* IMPORTANT:
//*    THE USERID THAT RUNS THIS JOB MUST HAVE SPECIAL AUTHORITY.
//*
//*    REVIEW THE CONTENTS OF THIS JOB BEFORE SUBMITTING IT.
//*    RUNNING IT UNCHANGED ON AN EXISTING SYSTEM CAN CAUSE
//*    OUTAGE, SIGNIFICANT SECURITY EXPOSURE OR LOSS OF
//*    AUTHORIZATION TO SYSTEM RESOURCES.
//*
//* NOTES:
//*
//*    THIS JOB SHOULD NOT BE RUN ON THE CUSTOMIZED OFFERINGS DRIVER
//*    AS IT ALREADY HAS THE REQUIRED RACF DEFINITIONS.
//*
//*    IF A DEFINITION ALREADY EXISTS EXPECT IKJ56702I MESSAGES
//*    WHICH CAN BE IGNORED.
//*
//*    REVIEW THE JOB OUTPUT TO VERIFY SECURITY OBJECTIVE HAVE
//*    BEEN MET.
//*
//* MRC:
//*    THE MAXIMUM EXPECTED RETURN CODE IS: 00
//*
//RACFDRV  EXEC PGM=IKJEFT01
//SYSTSPRT DD  SYSOUT=*
//SYSTERM  DD  DUMMY
//SYSTSIN  DD  *,DLM=@@
/* THE IRRDPI00 COMMAND BUILDS A */
/* 'DYNAMIC' TABLE FOR PARSING   */
/* SEGMENT-RELATED KEYWORDS.     */
RDEFINE +
  FACILITY IRRDPI00 +
  UACC(NONE)
PE +
  IRRDPI00 +
  CLASS(FACILITY) +
  ID(IBMUSER) +
  ACC(READ)
SETROPTS +
  REFRESH +
  RACLIST(FACILITY)
SETROPTS  +
  GENERIC(DATASET STARTED) +
  GENCMD(DATASET STARTED) +
  CLASSACT(DIGTRING  +
           DIGTCERT  +
           DIGTCRIT  +
           FACILITY  +
           LOGSTRM   +
           UNIXPRIV  +
           STARTED)  +
  RACLIST(DIGTCERT  +
          DIGTCRIT  +
          DIGTRING  +
          FACILITY  +
          UNIXPRIV  +
          LOGSTRM   +
          STARTED)
/* THE RACDCERT COMMAND INSTALLS      */
/* AND MAINTAINS DIGITAL CERTIFICATES */
/* KEY RINGS AND DIGITAL CERTIFICATE  */
/* MAPPINGS IN RACF                   */
RACDCERT +
  CERTAUTH +
  ALTER( +
  LABEL('Verisign Class 3 Primary CA')) +
  TRUST
RACDCERT +
  ADDRING(SecureFTPKeyRing) +
  ID(IBMUSER)
RACDCERT +
  CONNECT +
  (CERTAUTH +
  RING(SecureFTPKeyRing) +
  LABEL('Verisign Class 3 Primary CA') +
  USAGE(CERTAUTH)) +
  ID(IBMUSER)
SETROPTS  +
  RACLIST(DIGTCERT +
          DIGTCRIT +
          DIGTRING  +
          FACILITY  +
          LOGSTRM   +
          STARTED)  +
  REFRESH
@@
//*
//IRRDPI00 EXEC PGM=IKJEFT1B,REGION=1M,PARM='IRRDPI00 UPDATE'
//SYSTSPRT DD SYSOUT=*
//SYSUDUMP DD SYSOUT=*
//SYSUT1   DD DSN=SYS1.SAMPLIB(IRRDPSDS),DISP=SHR
//SYSTSIN  DD DUMMY
//*
//RACFPRF2 EXEC PGM=IKJEFT01
//SYSTSPRT DD  SYSOUT=*
//SYSTERM  DD  DUMMY
//SYSTSIN  DD  *,DLM=@@
  PROF MSGID WTPMSG
/************ SETROPTS COMMAND SETS SYSTEM-WIDE RACF ************/
/************ OPTIONS RELATED TO RESOURCE PROTECTION ************/
SETROPTS +
   GENERIC(DATASET STARTED) +
   GENCMD(DATASET STARTED) +
   CLASSACT(FACILITY +
            LOGSTRM) +
   RACLIST(FACILITY)
/***********  BEGIN SETUP FOR ZFS FILE SYSTEMS  **********/
/** SPECIFIES Z/OS UNIX SYSTEM   **/
/** SERVICES INFORMATION FOR THE **/
/** GROUP BEING DEFINED TO RACF  **/
ADDGROUP +
  DFSGRP  +
  SUPGROUP(SYS1) +
  OMVS(GID(3))
ADDGROUP +
  ZFSGRP  +
  SUPGROUP(SYS1) +
  OMVS(GID(4))
ADDUSER +
  DFS +
  DFLTGRP(DFSGRP) +
  AUTHORITY(CREATE) +
  OMVS(HOME(/opt/dfslocal/home/dfscntl) UID(0)) +
  UACC(NONE)
ADDUSER +
  ZFS +
  DFLTGRP(ZFSGRP) +
  AUTHORITY(CREATE) +
  OMVS(UID(0)      +
  HOME('/opt/dfslocal/home/dfscntl'))
RDEFINE +
  STARTED +
  DFS.* +
  STDATA(USER(DFS))
RDEFINE +
  STARTED +
  DFSCM.* +
  STDATA(USER(DFS))
RDEFINE +
  STARTED +
  ZFS.* +
  STDATA(USER(ZFS))
CONNECT  +
   ZFS   +
   GROUP(DFSGRP) +
   AUTH(CREATE)
/************** END SETUP FOR ZFS FILE SYSTEM ***************/
/********       SYS1 IS AN EXISTING DEFAULT RACF GROUP       ********/
/********  BEGIN DEFINING NEW GROUPS FOR ALL MASTER CATALOG  ********/
/********  ALIAS. IT ALSO CONNECTS SOME USERS, DEFINES       ********/
/********  DATASET PROFILES AND PERMIT ACCESS TO PROFILES    ********/
ADDGROUP +
   AOP +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(AOP) +
   AUTH(JOIN)
AD +
   'AOP.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'AOP.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   ASM +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ASM) +
   AUTH(JOIN)
AD +
   'ASM.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'ASM.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   AZD +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(AZD) +
   AUTH(JOIN)
AD +
   'AZD.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'AZD.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   BAQ +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(BAQ) +
   AUTH(JOIN)
AD +
   'BAQ.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'BAQ.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   BBL +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(BBL) +
   AUTH(JOIN)
AD +
   'BBL.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'BBL.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   BDT1 +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(BDT1) +
   AUTH(JOIN)
AD +
   'BDT1.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'BDT1.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   CBC +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CBC) +
   AUTH(JOIN)
AD +
   'CBC.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'CBC.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   CDS +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CDS) +
   AUTH(JOIN)
AD +
   'CDS.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'CDS.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   CEE +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CEE) +
   AUTH(JOIN)
AD +
   'CEE.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'CEE.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   CFZ +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CFZ) +
   AUTH(JOIN)
AD +
   'CFZ.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'CFZ.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   CPAC +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CPAC) +
   AUTH(JOIN)
AD +
   'CPAC.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'CPAC.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   CSF +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(CSF) +
   AUTH(JOIN)
AD +
   'CSF.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'CSF.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   DGA +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(DGA) +
   AUTH(JOIN)
AD +
   'DGA.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'DGA.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   EUVF +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(EUVF) +
   AUTH(JOIN)
AD +
   'EUVF.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'EUVF.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   FFST +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(FFST) +
   AUTH(JOIN)
AD +
   'FFST.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'FFST.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   FNT +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(FNT) +
   AUTH(JOIN)
AD +
   'FNT.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'FNT.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   GDDM +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(GDDM) +
   AUTH(JOIN)
AD +
   'GDDM.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'GDDM.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   GIM +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(GIM) +
   AUTH(JOIN)
AD +
   'GIM.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'GIM.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   GLD +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(GLD) +
   AUTH(JOIN)
AD +
   'GLD.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'GLD.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   GSK +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(GSK) +
   AUTH(JOIN)
AD +
   'GSK.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'GSK.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   HAP +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(HAP) +
   AUTH(JOIN)
AD +
   'HAP.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'HAP.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   HKC +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(HKC) +
   AUTH(JOIN)
AD +
   'HKC.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'HKC.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   IBMZ +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(IBMZ) +
   AUTH(JOIN)
AD +
   'IBMZ.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'IBMZ.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   ICQ +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ICQ) +
   AUTH(JOIN)
AD +
   'ICQ.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'ICQ.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   IGY +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(IGY) +
   AUTH(JOIN)
AD +
   'IGY.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'IGY.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   IOE +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(IOE) +
   AUTH(JOIN)
AD +
   'IOE.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'IOE.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   ISF +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ISF) +
   AUTH(JOIN)
AD +
   'ISF.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'ISF.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   ISP +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(ISP) +
   AUTH(JOIN)
AD +
   'ISP.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'ISP.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   IXM +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(IXM) +
   AUTH(JOIN)
AD +
   'IXM.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'IXM.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   IZD +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(IZD) +
   AUTH(JOIN)
AD +
   'IZD.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'IZD.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   IZU +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(IZU) +
   AUTH(JOIN)
AD +
   'IZU.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'IZU.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   JAVA +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(JAVA) +
   AUTH(JOIN)
AD +
   'JAVA.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'JAVA.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   MQ +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(MQ) +
   AUTH(JOIN)
AD +
   'MQ.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'MQ.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   NETVIEW +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(NETVIEW) +
   AUTH(JOIN)
AD +
   'NETVIEW.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'NETVIEW.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   OMVS +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(OMVS) +
   AUTH(JOIN)
AD +
   'OMVS.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'OMVS.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   PAGE +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(PAGE) +
   AUTH(JOIN)
AD +
   'PAGE.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'PAGE.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   REXX +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(REXX) +
   AUTH(JOIN)
AD +
   'REXX.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'REXX.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   SMPE +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(SMPE) +
   AUTH(JOIN)
AD +
   'SMPE.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'SMPE.**' +
   ID(IBMUSER) +
   ACC(ALTER)
CONNECT +
   IBMUSER +
   GROUP(SYS1) +
   AUTH(JOIN)
AD +
   'SYS1.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'SYS1.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   TCPIP +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(TCPIP) +
   AUTH(JOIN)
AD +
   'TCPIP.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'TCPIP.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   TCPIVP +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(TCPIVP) +
   AUTH(JOIN)
AD +
   'TCPIVP.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'TCPIVP.**' +
   ID(IBMUSER) +
   ACC(ALTER)
ADDGROUP +
   TIVOLI +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(TIVOLI) +
   AUTH(JOIN)
AD +
   'TIVOLI.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'TIVOLI.**' +
   ID(IBMUSER) +
   ACC(ALTER)
/********  END DEFINING NEW GROUPS FOR MASTER CATALOG ALIAS  ********/
/*****************  PERMIT ACCESS TO BPX FACILITY  ******************/
PE +
   BPX.DAEMON +
   CLASS(FACILITY) +
   ID(SYS1) +
   ACC(READ)
PE +
   BPX.DAEMON +
   CLASS(FACILITY) +
   ID(IBMUSER) +
   ACCESS(READ)
/***************  DEFINE TTY, UUCPG AND UUCP GROUPS  ****************/
ADDGROUP +
  TTY  +
  OMVS(GID(2))
ADDGROUP +
  UUCPG +
  OMVS(GID(8765))
ADDUSER +
  UUCP +
  DFLTGRP(UUCPG) +
  OMVS(UID(396) +
  HOME('/usr/spool/uucppublic') +
  PROGRAM('/bin/sh'))
/********** SET UID(0), HOME DIRECTORY AND **********/
/********** PROGRAM DIRECTORY FOR IBMUSER  **********/
ALTUSER +
   IBMUSER +
   OMVS(UID(0) +
   HOME('/') +
   PROGRAM('/bin/sh'))
/****** BEGIN DEFINING DIFFERENT FACILITY CLASS, ******/
/************ PERMIT ACCESS TO IBMUSER  ***************/
RDEFINE +
    FACILITY BPX.FILEATTR.APF +
    UACC(NONE)
RDEFINE +
    FACILITY BPX.FILEATTR.PROGCTL +
    UACC(NONE)
RDEFINE +
    FACILITY BPX.FILEATTR.SHARELIB +
    UACC(NONE)
RDEFINE +
    UNIXPRIV +
    SUPERUSER.FILESYS.PFSCTL +
    UACC(NONE)
PE +
    BPX.FILEATTR.APF +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(READ)
PE +
    BPX.FILEATTR.PROGCTL +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(READ)
PE +
    BPX.FILEATTR.SHARELIB +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(READ)
PE +
    SUPERUSER.FILESYS.PFSCTL +
    CLASS(UNIXPRIV) +
    ID(IBMUSER) +
    ACC(READ)
/******* END DEFINING DIFFERENT FACILITY CLASS, ********/
/*******************************************************/
/*********** BEGIN NEW SMP/E FACILITY CLASS  ***********/
RDEFINE +
    FACILITY +
    GIM.CMD.* +
    UACC(NONE)
PERMIT +
    GIM.CMD.* +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(READ)
RDEFINE +
    FACILITY +
    GIM.PGM.* +
    UACC(NONE)
PERMIT +
    GIM.PGM.* +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(READ)
/*********** END NEW SMP/E FACILITY CLASS  ***********/
/****************************************************************/
/**** BEGIN DEFINE, PERMIT DIFFERENT FACILITY FOR LOGSTREAMS ****/
RDEFINE +
  FACILITY +
  MVSADMIN.LOGR +
  UACC(NONE)
RDEFINE +
  LOGSTRM +
  SYSPLEX.OPERLOG +
  UACC(NONE)
RDEFINE +
  LOGSTRM +
  SYSPLEX.LOGREC.ALLRECS +
  UACC(NONE)
PE +
  MVSADMIN.LOGR +
  CLASS(FACILITY) +
  ID(IBMUSER) +
  ACC(UPDATE)
PE +
  SYSPLEX.OPERLOG +
  CLASS(LOGSTRM) +
  ID(IBMUSER) +
  ACC(ALTER)
PE +
  SYSPLEX.LOGREC.ALLRECS +
  CLASS(LOGSTRM) +
  ID(IBMUSER) +
  ACC(ALTER)
/****  END DEFINE, PERMIT DIFFERENT FACILITY FOR LOGSTREAMS  ****/
/****************************************************************/
/*****  BEGIN DIGITAL CERTIFICATE DEFINITIONS AND PERMITS  *****/
/* FOR SAF GENCERT AND EXPORT REQUESTS */
/* WHERE THE APPLICATION HAS READ AND  */
/* UPDATE ACCESS, SUBSEQUENT ACCESS    */
/* CHECKS ARE PERFORMED AGAINST THE    */
/* IRR.DIGTCERT.FUNCTION FACILITY      */
/* RESOURCES.                          */
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.ADD +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.ADDRING +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.ALTER +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.ALTMAP +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.CONNECT +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.DELETE +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.DELMAP +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.DELRING +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.EXPORT +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.EXPORTKEY +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.GENCERT +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.GENREQ +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.LIST +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.LISTMAP +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.LISTRING +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.MAP +
    UACC(NONE)
RDEFINE +
    FACILITY +
    IRR.DIGTCERT.REMOVE +
    UACC(NONE)
PE +
    IRR.DIGTCERT.ADD +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.ADD +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.ADDRING +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.ADDRING +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PE +
    IRR.DIGTCERT.ALTER +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.ALTER +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.ALTMAP +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.ALTMAP +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PE +
    IRR.DIGTCERT.CONNECT +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.CONNECT +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.DELETE +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.DELETE +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.DELMAP +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.DELMAP +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PE +
    IRR.DIGTCERT.DELRING +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.DELRING +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PE +
    IRR.DIGTCERT.EXPORT +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.EXPORT +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.EXPORTKEY  +
    CLASS(FACILITY) +
    ID(*)  +
    ACC(READ)
PE +
    IRR.DIGTCERT.EXPORTKEY +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.GENCERT +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.GENCERT +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.GENREQ +
    CLASS(FACILITY)+
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.GENREQ +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.LIST +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.LIST +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
PE +
    IRR.DIGTCERT.LISTMAP +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.LISTMAP +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PE +
    IRR.DIGTCERT.LISTRING +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.LISTRING +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PE +
    IRR.DIGTCERT.MAP +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.MAP +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(UPDATE)
PE +
    IRR.DIGTCERT.REMOVE +
    CLASS(FACILITY) +
    ID(*) +
    ACC(READ)
PE +
    IRR.DIGTCERT.REMOVE +
    CLASS(FACILITY) +
    ID(IBMUSER) +
    ACC(CONTROL)
/********  END DIGITAL CERTIFICATE DEFINITIONS AND PERMITS  *******/
/******************************************************************/
/**************  REFRESH THE AFFECTED RACF CLASSES  ***************/
SETROPTS RACLIST(FACILITY  +
           DIGTCERT  +
           DIGTCRIT  +
           DIGTRING  +
           LOGSTRM   +
           STARTED   +
           UNIXPRIV) +
     REFRESH
/****  BEGIN CREATE PROFILES FOR ANY SSA THE CUSTOMER DEFINED *****/
ADDGROUP +
   Z24SUP +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(Z24SUP) +
   AUTH(JOIN)
AD +
   'Z24SUP.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'Z24SUP.**' +
   ID(IBMUSER) +
   ACC(ALTER)
PE +
   'Z24SUP.**' +
   ID(OMVSKERN) +
   ACC(ALTER)
PE +
   'Z24SUP.**' +
   ID(DFS) +
   ACC(ALTER)
ADDGROUP +
   Z24MST +
   SUPGROUP(SYS1)
CONNECT +
   IBMUSER +
   GROUP(Z24MST) +
   AUTH(JOIN)
AD +
   'Z24MST.**' +
   GENERIC +
   OWNER(IBMUSER) +
   UACC(READ)
PE +
   'Z24MST.**' +
   ID(IBMUSER) +
   ACC(ALTER)
PE +
   'Z24MST.**' +
   ID(OMVSKERN) +
   ACC(ALTER)
PE +
   'Z24MST.**' +
   ID(DFS) +
   ACC(ALTER)
/*****  END CREATE PROFILES FOR ANY SSA THE CUSTOMER DEFINED *****/
/********* REFRESH ALL THE IMPACTED PROFILES  ********/
SETROPTS +
   RACLIST(STARTED FACILITY LOGSTRM) +
   REFRESH
SETROPTS +
   GENERIC(DATASET STARTED) +
   REFRESH
@@
//NOTOK   EXEC PGM=CPPMAXRC,COND=((0,GE),(4000,LT))
/*
